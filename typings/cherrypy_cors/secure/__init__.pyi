"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict, List, Optional, Tuple, Union
from .headers import CacheControl, ContentSecurityPolicy, PermissionsPolicy, ReferrerPolicy, ReportTo, Server, StrictTransportSecurity, XContentTypeOptions, XFrameOptions, XXSSProtection

class Secure:
    """Set Secure Header options

    :param server: Server header options
    :param hsts: Strict-Transport-Security (HSTS) header options
    :param xfo: X-Frame-Options (XFO) header options
    :param xxp: X-XSS-Protection (XXP) header options
    :param content: X-Content-Type-Options header options
    :param csp: Content-Security-Policy (CSP) header options
    :param referrer: Referrer-Policy header options
    :param cache: Cache-control, Pragma and Expires headers options
    :param feature: Feature-Policy header options
    """
    framework: Framework
    def __init__(self, server: Optional[Server] = ..., hsts: Optional[StrictTransportSecurity] = ..., xfo: Optional[XFrameOptions] = ..., xxp: Optional[XXSSProtection] = ..., content: Optional[XContentTypeOptions] = ..., csp: Optional[ContentSecurityPolicy] = ..., referrer: Optional[ReferrerPolicy] = ..., cache: Optional[CacheControl] = ..., permissions: Optional[PermissionsPolicy] = ..., report_to: Optional[ReportTo] = ...) -> None:
        ...
    
    def __repr__(self) -> str:
        ...
    
    def headers(self) -> Dict[str, str]:
        """Dictionary of secure headers

        :return: dictionary containing security headers
        :rtype: Dict[str, str]
        """
        ...
    
    def headers_tuple(self) -> List[Tuple[str, str]]:
        """List of a tuple containing secure headers

        :return: list of tuples containing security headers
        :rtype: List[Tuple[str, str]]
        """
        ...
    
    class Framework:
        """
        Secure supported frameworks
        """
        def __init__(self, secure: Secure) -> None:
            ...
        
        def aiohttp(self, response: Any) -> None:
            """Update Secure Headers to aiohttp response object.

            :param response: aiohttp response object.
            """
            ...
        
        def bottle(self, response: Any) -> None:
            """Update Secure Headers to Bottle response object.

            :param response: Bottle response object (bottle.response).
            """
            ...
        
        def cherrypy(self) -> List[Tuple[str, str]]:
            """Return tuple of Secure Headers for CherryPy (tools.response_headers.headers).

            :return: A list with a tuple of Secure Headers.
            """
            ...
        
        def django(self, response: Any) -> None:
            """Update Secure Headers to Django response object.

            :param response: Django response object (django.http.HttpResponse)
            """
            ...
        
        def falcon(self, response: Any) -> None:
            """Update Secure Headers to Falcon response object.

            :param response: Falcon response object (falcon.Response)
            """
            ...
        
        def flask(self, response: Any) -> None:
            """Update Secure Headers to Flask response object.

            :param response: Flask response object (flask.Response)
            """
            ...
        
        def fastapi(self, response: Any) -> None:
            """Update Secure Headers to FastAPI response object.

            :param response: FastAPI response object.
            """
            ...
        
        def hug(self, response: Any) -> None:
            """Update Secure Headers to hug response object.

            :param response: hug response object
            """
            ...
        
        def masonite(self, request: Any) -> None:
            """Update Secure Headers to Masonite request object.

            :param request: Masonite request object (masonite.request.Request)
            """
            ...
        
        def pyramid(self, response: Any) -> None:
            """Update Secure Headers to Pyramid response object.

            :param response: Pyramid response object (pyramid.response).
            """
            ...
        
        def quart(self, response: Any) -> None:
            """Update Secure Headers to Quart response object.

            :param response: Quart response object (quart.wrappers.response.Response)
            """
            ...
        
        def responder(self, response: Any) -> None:
            """Update Secure Headers to Responder response object.

            :param response: Responder response object.
            """
            ...
        
        def sanic(self, response: Any) -> None:
            """Update Secure Headers to Sanic response object.

            :param response: Sanic response object (sanic.response).
            """
            ...
        
        def starlette(self, response: Any) -> None:
            """Update Secure Headers to Starlette response object.

            :param response: Starlette response object.
            """
            ...
        
        def tornado(self, response: Any) -> None:
            """Update Secure Headers to Tornado RequestHandler object.

            :param response: Tornado RequestHandler object (tornado.web.RequestHandler).
            """
            ...
        
    
    


