"""
This type stub file was generated by pyright.
"""

import os
import sys

__all__ = ["PublicSuffixList"]
ENCODING = ...
PSLURL = ...
PSLFILE = ...
if sys.version_info >= (3, ):
    def u(s): # -> str:
        ...
    
    def b(s): # -> bytes:
        ...
    
    basestr = str
    decodablestr = ...
else:
    ...
def encode_idn(domain): # -> str:
    ...

def decode_idn(domain): # -> str:
    ...

class PublicSuffixList:
    """ PublicSuffixList parser.

    After __init__(), all instance methods become thread-safe.
    Most methods accept str or unicode as input in Python 2.x, str (not bytes) in Python 3.x.
    """
    def __init__(self, source=..., accept_unknown=..., accept_encoded_idn=..., only_icann=...) -> None:
        """ Parse PSL source file and Return PSL object

        source: file (line iterable) object, or flat str to parse. (Default: built-in PSL file)
        accept_unknown: bool, assume unknown TLDs to be public suffix. (Default: True)
        accept_encoded_idn: bool, if False, do not generate punycoded version of PSL.
            Without punycoded PSL object, parsing punycoded IDN cause incorrect results. (Default: True)
        only_icann: bool, if True, only ICANN suffixes are honored, not private ones.
            The markers '// ===BEGIN ICANN DOMAINS===' and '// ===END ICANN DOMAINS==='
            are needed for ICANN section detection. (Default: False)
        """
        ...
    
    def suffix(self, domain, accept_unknown=...): # -> str | None:
        """ Alias for privatesuffix """
        ...
    
    def privatesuffix(self, domain, accept_unknown=...): # -> str | None:
        """ Return shortest suffix assigned for an individual.

        domain: str or unicode to parse. (Required)
        accept_unknown: bool, assume unknown TLDs to be public suffix. (Default: object default)

        Return None if domain has invalid format.
        Return None if domain has no private part.
        """
        ...
    
    def publicsuffix(self, domain, accept_unknown=...): # -> str | None:
        """ Return longest publically shared suffix.

        domain: str or unicode to parse. (Required)
        accept_unknown: bool, assume unknown TLDs to be public suffix. (Default: object default)

        Return None if domain has invalid format.
        Return None if domain is not listed in PSL and accept_unknown is False.
        """
        ...
    
    def is_private(self, domain): # -> bool:
        """ Return True if domain is private suffix or sub-domain. """
        ...
    
    def is_public(self, domain):
        """ Return True if domain is publix suffix. """
        ...
    
    def privateparts(self, domain): # -> tuple[str] | tuple[Unknown, ...] | None:
        """ Return tuple of labels and the private suffix. """
        ...
    
    def subdomain(self, domain, depth): # -> str | None:
        """ Return so-called subdomain of specified depth in the private suffix. """
        ...
    


